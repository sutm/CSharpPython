using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CSharpPython
{
    class Program
    {
        const string PYTHON_EXE = @"C:/Projects/Envs/data_analysis/Scripts/python.exe";

        static void Main(string[] args)
        {
            var result = run_cmd(@"C:/Projects/Scripts/spc/spc.py", "test1", "test2");
            Console.Write(result);
        }

        public static string run_cmd(string cmd, params string[] args)
        {
            ProcessStartInfo info = new ProcessStartInfo();
            info.FileName = PYTHON_EXE;
            
            StringBuilder sb = new StringBuilder();
            sb.Append(String.Format("\"{0}\"", cmd));
            foreach (var arg in args)
            {
                sb.Append(String.Format(" \"{0}\"", arg));
            }
            info.Arguments = sb.ToString();
            info.UseShellExecute = false;// Do not use OS shell
            info.CreateNoWindow = true; 
            info.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            info.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(info))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    var task_err = process.StandardError.ReadToEndAsync();
                    var task_result = process.StandardOutput.ReadToEndAsync();
                    process.WaitForExit();

                    if (task_err.Result.Length > 0)
                        Debug.WriteLine(task_err.Result);

                    return task_result.Result;
                }
            }
        }
    }
}
